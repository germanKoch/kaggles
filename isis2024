{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":63056,"databundleVersionId":9094797,"sourceType":"competition"}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import os\nimport gc\nimport cv2\nimport math\nimport copy\nimport time\nimport random\nimport glob\nfrom matplotlib import pyplot as plt\nimport h5py\nfrom PIL import Image\nfrom io import BytesIO\n\n# For data manipulation\nimport numpy as np\nimport pandas as pd\n\n# Pytorch Imports\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nimport torch.nn.functional as F\nfrom torch.optim import lr_scheduler\nfrom torch.utils.data import Dataset, DataLoader\nfrom torch.cuda import amp\nimport torchvision\n\n# Utils\nimport joblib\nfrom tqdm import tqdm\nfrom collections import defaultdict\n\n# Sklearn Imports\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import StratifiedKFold, StratifiedGroupKFold \nfrom sklearn.metrics import roc_curve\n\n# For Image Models\nimport timm\n\n# Albumentations for augmentations\nimport albumentations as A\nfrom albumentations.pytorch import ToTensorV2\n\n# For colored terminal text\nfrom colorama import Fore, Back, Style\nb_ = Fore.BLUE\nsr_ = Style.RESET_ALL\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# For descriptive error messages\nos.environ['CUDA_LAUNCH_BLOCKING'] = \"1\"","metadata":{"execution":{"iopub.status.busy":"2024-07-21T12:21:58.187765Z","iopub.execute_input":"2024-07-21T12:21:58.188248Z","iopub.status.idle":"2024-07-21T12:22:00.868275Z","shell.execute_reply.started":"2024-07-21T12:21:58.188205Z","shell.execute_reply":"2024-07-21T12:22:00.867071Z"},"trusted":true},"execution_count":59,"outputs":[]},{"cell_type":"code","source":"def set_seed(seed=42):\n    '''Sets the seed of the entire notebook so results are the same every time we run.\n    This is for REPRODUCIBILITY.'''\n    np.random.seed(seed)\n    torch.manual_seed(seed)\n    torch.cuda.manual_seed(seed)\n    # When running on the CuDNN backend, two further options must be set\n    torch.backends.cudnn.deterministic = True\n    torch.backends.cudnn.benchmark = False\n    # Set a fixed value for the hash seed\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    \nset_seed()","metadata":{"execution":{"iopub.status.busy":"2024-07-21T12:23:13.621325Z","iopub.execute_input":"2024-07-21T12:23:13.621733Z","iopub.status.idle":"2024-07-21T12:23:13.632790Z","shell.execute_reply.started":"2024-07-21T12:23:13.621702Z","shell.execute_reply":"2024-07-21T12:23:13.631246Z"},"trusted":true},"execution_count":61,"outputs":[]},{"cell_type":"markdown","source":"# Config","metadata":{}},{"cell_type":"code","source":"# TODO: consider to add pseudolabeling\n# TODO: consider to use tabular data in classification task","metadata":{"execution":{"iopub.status.busy":"2024-07-21T12:48:16.518135Z","iopub.execute_input":"2024-07-21T12:48:16.519491Z","iopub.status.idle":"2024-07-21T12:48:16.529163Z","shell.execute_reply.started":"2024-07-21T12:48:16.519423Z","shell.execute_reply":"2024-07-21T12:48:16.527456Z"},"trusted":true},"execution_count":69,"outputs":[]},{"cell_type":"code","source":"ROOT_DIR = \"/kaggle/input/isic-2024-challenge\"\nTRAIN_CSV = f\"{ROOT_DIR}/train-metadata.csv\"\nTRAIN_HDF = f\"{ROOT_DIR}/train-image.hdf5\"\nTEST_CSV = f'{ROOT_DIR}/test-metadata.csv'\nTEST_HDF = f'{ROOT_DIR}/test-image.hdf5'\nSAMPLE = f'{ROOT_DIR}/sample_submission.csv'\nIMAGE_NAME_PATTERN = re.compile(r'(?P<id>.+)\\.jpg')","metadata":{"execution":{"iopub.status.busy":"2024-07-21T12:25:17.374352Z","iopub.execute_input":"2024-07-21T12:25:17.374813Z","iopub.status.idle":"2024-07-21T12:25:17.381868Z","shell.execute_reply.started":"2024-07-21T12:25:17.374782Z","shell.execute_reply":"2024-07-21T12:25:17.380460Z"},"trusted":true},"execution_count":62,"outputs":[]},{"cell_type":"markdown","source":"# Data","metadata":{}},{"cell_type":"code","source":"class TrainDataset(Dataset):\n    def __init__(self, df, file_train_hdf, df_pseudo, file_test_hdf, transforms=None):\n        self.fp_train_hdf = h5py.File(file_train_hdf, mode=\"r\")\n        self.fp_test_hdf = h5py.File(file_test_hdf, mode=\"r\")\n        self.df_positive = pd.concat( [\n            df[df[\"target\"] == 1], df_pseudo[df_pseudo[\"target\"] >= CONFIG[\"pseudo_th_positive\"]]\n        ]).reset_index()\n        self.df_negative = pd.concat( [\n            df[df[\"target\"] == 0], df_pseudo[df_pseudo[\"target\"] < CONFIG[\"pseudo_th_positive\"]]\n        ]).reset_index()\n        self.isic_ids_positive = self.df_positive['isic_id'].values\n        self.isic_ids_negative = self.df_negative['isic_id'].values\n        self.targets_positive = self.df_positive['target'].values\n        self.targets_negative = self.df_negative['target'].values        \n        self.transforms = transforms\n        \n    def __len__(self):\n        return len(self.df_positive) * 2\n    \n    def __getitem__(self, index):\n        if random.random() >= 0.5:\n            df = self.df_positive\n            isic_ids = self.isic_ids_positive\n            targets = self.targets_positive\n        else:\n            df = self.df_negative\n            isic_ids = self.isic_ids_negative\n            targets = self.targets_negative\n        index = index % df.shape[0]\n        \n        isic_id = isic_ids[index]\n        if isic_id in self.fp_train_hdf.keys():\n            fp = self.fp_train_hdf\n        else:\n            fp = self.fp_test_hdf\n\n        img = np.array( Image.open(BytesIO(fp[isic_id][()])) )\n        target = targets[index]\n        \n        if self.transforms:\n            img = self.transforms(image=img)[\"image\"]\n            \n        return {\n            'image': img,\n            'target': target\n        }","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_data = pd.read_csv(TRAIN_CSV)","metadata":{"execution":{"iopub.status.busy":"2024-07-21T12:25:55.527711Z","iopub.execute_input":"2024-07-21T12:25:55.528152Z","iopub.status.idle":"2024-07-21T12:26:01.164147Z","shell.execute_reply.started":"2024-07-21T12:25:55.528119Z","shell.execute_reply":"2024-07-21T12:26:01.162912Z"},"trusted":true},"execution_count":63,"outputs":[]},{"cell_type":"code","source":"a = h5py.File(TRAIN_HDF, mode=\"r\")","metadata":{"execution":{"iopub.status.busy":"2024-07-21T12:26:43.585461Z","iopub.execute_input":"2024-07-21T12:26:43.585932Z","iopub.status.idle":"2024-07-21T12:26:43.620446Z","shell.execute_reply.started":"2024-07-21T12:26:43.585896Z","shell.execute_reply":"2024-07-21T12:26:43.619015Z"},"trusted":true},"execution_count":65,"outputs":[]},{"cell_type":"code","source":"Image.open(BytesIO(a['ISIC_0015670'][()]))","metadata":{"execution":{"iopub.status.busy":"2024-07-21T12:28:58.917171Z","iopub.execute_input":"2024-07-21T12:28:58.917622Z","iopub.status.idle":"2024-07-21T12:28:58.938352Z","shell.execute_reply.started":"2024-07-21T12:28:58.917589Z","shell.execute_reply":"2024-07-21T12:28:58.937299Z"},"trusted":true},"execution_count":68,"outputs":[{"execution_count":68,"output_type":"execute_result","data":{"text/plain":"<PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=139x139>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}